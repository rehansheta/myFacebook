/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * HomePanel.java
 *
 * Created on Apr 21, 2012, 10:55:03 PM
 */
package myfacebook;

import stubs.Post;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Date;
import java.util.ListIterator;
import javax.swing.BoxLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Riyad
 */
public class HomePanel extends javax.swing.JPanel {

    private final MainFrame mainFrame;
    private final CommModule commModule;
    JPanel pContainer;

    /** Creates new form HomePanel */
    public HomePanel(MainFrame mainFrame, CommModule commModule) {
        this.mainFrame = mainFrame;
        this.commModule = commModule;
        initComponents();

        myInit();
    }

    void myInit() {
        pContainer = new JPanel();
        pContainer.setBackground(new Color(0, 153, 153));
        pContainer.setLayout(new BoxLayout(pContainer, BoxLayout.PAGE_AXIS));
        jScrollPane1.getVerticalScrollBar().setUnitIncrement(16);
        jScrollPane1.getViewport().add(pContainer);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(HomePanel.class);
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setName("Form"); // NOI18N

        jScrollPane1.setBackground(resourceMap.getColor("jScrollPane1.background")); // NOI18N
        jScrollPane1.setAutoscrolls(true);
        jScrollPane1.setName("jScrollPane1"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    void addPosts(ArrayList<Post> posts, boolean isNotification) {
        Component[] prev = pContainer.getComponents();
        pContainer.removeAll();

        ArrayList<String> notificationFeed = new ArrayList<String>();
        ListIterator itr = posts.listIterator();
        while (itr.hasNext()) {
            Post p = (Post) itr.next();
            UpdatePanel t = null;

            // wall post
            if (p.getType() == 2) {
                t = new UpdatePanel("<html>" + new Date(p.getDate()) + "</html>", p.getSender() + " is now friend with " + p.getReceiver());
            } else {
                t = new UpdatePanel("<html>" + p.getSender() + " wrote on " + p.getReceiver() + "'s wall<br>" + new Date(p.getDate()) + "</html>", p.getContent());
            }

            if (p.getSender().equals(mainFrame.getUserID())) {
                if (p.getType() == 2) {
                    t = new UpdatePanel("<html>" + new Date(p.getDate()) + "</html>", "You are now friend with " + p.getReceiver());
                } else {
                    t = new UpdatePanel("<html>" + "You wrote on " + p.getReceiver() + "'s wall<br>" + new Date(p.getDate()) + "</html>", p.getContent());
                }
            }
            if (p.getReceiver().equals(mainFrame.getUserID())) {
                if (p.getType() == 2) {
                    t = new UpdatePanel("<html>" + new Date(p.getDate()) + "</html>", "You are now friend with " + p.getSender());
                } else {
                    t = new UpdatePanel("<html>" + p.getSender() + " wrote on your wall<br>" + new Date(p.getDate()) + "</html>", p.getContent());
                }
            }

            pContainer.add(t);
            
            // popup notification and friend list update
            if (isNotification) {
                if (p.getReceiver().equals(mainFrame.getUserID())) {
                    
                    if (p.getType() == 2) {
                        mainFrame.updateFriendList();
                        notificationFeed.add(p.getSender() + " has accepted your friend request");
                    } else {
                        notificationFeed.add(p.getSender() + " wrote on your wall");
                    }
                } else if (p.getSender().equals(mainFrame.getUserID())) {
                    if (p.getType() == 2) {
                        if (isNotification) {
                            mainFrame.updateFriendList();
                        }
                    }
                }
            }

        }

        for (int i = 0; i < prev.length; i++) {
            pContainer.add(prev[i]);
        }

        pContainer.repaint();
        pContainer.updateUI();
        
        // show the notifications (there should be at most one at a time)
        ListIterator feedItr = notificationFeed.listIterator();
        while (feedItr.hasNext()) {
            JOptionPane.showMessageDialog(this, (String) feedItr.next(), "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
    }
}
