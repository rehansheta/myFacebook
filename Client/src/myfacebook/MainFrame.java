/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFrame.java
 *
 * Created on Apr 21, 2012, 2:18:01 AM
 */
package myfacebook;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import stubs.Post;
import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;
import stubs.CallBackStub;
import stubs.UserAccountStub;
import stubs.UserProfileStub;

/**
 *
 * @author Riyad
 */
public class MainFrame extends javax.swing.JFrame {

    LoginPanel loginPanel;
    JPanel logoutPanel;
    ProfilePanel profilePanel;
    FriendsPanel friendsPanel;
    HomePanel homePanel;
    CommModule commModule;
    CallBack callBack;
    public boolean isLoggedIn;
    private String userID;
    private String password;
    public UserAccountStub userAccount;

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getUserID() {
        return userID;
    }

    public void setUserID(String userID) {
        this.userID = userID;
    }

    /** Creates new form MainFrame */
    public MainFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(MainFrame.class);
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setName("Form"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTabbedPane1.setBackground(resourceMap.getColor("jTabbedPane1.background")); // NOI18N
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });
        jTabbedPane1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTabbedPane1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTabbedPane1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTabbedPane1KeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && this.jTabbedPane1.getSelectedComponent().equals(this.logoutPanel)) {
            if (this.isLoggedIn) {
                this.jTabbedPane1.removeAll();
                loginPanel = new LoginPanel(this, commModule);
                this.jTabbedPane1.add("Login", this.loginPanel);
                this.logout();
            }
        }
    }//GEN-LAST:event_jTabbedPane1KeyReleased

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        if (this.jTabbedPane1.getSelectedComponent().equals(this.logoutPanel)) {
            if (this.isLoggedIn) {
                this.jTabbedPane1.removeAll();
                loginPanel = new LoginPanel(this, commModule);
                this.jTabbedPane1.add("Login", this.loginPanel);
                this.logout();
            }
        }
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.logout();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        final MainFrame f = new MainFrame();
        f.setLocation(200, 100);
        f.setResizable(false);

        try {
            for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        f.init();
        f.setVisible(true);
    }

    private void logout() {
        if (isLoggedIn) {
            try {
                if (commModule.getServantStub().logout(userID)) {
                    isLoggedIn = false;
                    JOptionPane.showMessageDialog(this, "You are succesfully logged out", "Logout", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    System.out.println("Network failure");
                }
                this.setTitle("My Facebook");
                System.out.println("logged out");
            } catch (RemoteException ex) {
                System.out.println("Network failure");
            }
        }
    }

    private void init() {
        this.setTitle("My Facebook");
        this.setResizable(false);
        commModule = new CommModule();
        isLoggedIn = false;

        loginPanel = new LoginPanel(this, commModule);
//        loginPanel.setName("Login");
        jTabbedPane1.add("Login", loginPanel);
//        jTabbedPane1.transferFocus();
//        loginPanel.requestFocus();
    }

    public void loggedInTasks() {
        this.setTitle(userID + " - My Facebook");
        isLoggedIn = true;
        jTabbedPane1.removeAll();

        homePanel = new HomePanel(this, commModule);
        jTabbedPane1.add("Home", homePanel);

        try {
            ArrayList<Post> posts = userAccount.getUpdates(userID);

            if (posts.isEmpty()) {
                Post p = new Post();
                p.setContent("<html>Welcome to My Facebook. Make friends and share your updates. Enjoy!</html>");
                p.setSender("Admin");
                p.setReceiver(getUserID());
                p.setDate(System.currentTimeMillis());
                posts.add(p);
            }
            homePanel.addPosts(posts, false);
        } catch (RemoteException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        friendsPanel = new FriendsPanel(this, commModule);
        jTabbedPane1.add("Friends", friendsPanel);

        profilePanel = new ProfilePanel(this, commModule);
        jTabbedPane1.add("My Profile", profilePanel);

        logoutPanel = new JPanel();
        logoutPanel.setBackground(new Color(0, 153, 153));
        jTabbedPane1.add("Logout", logoutPanel);

        registerCallBackObject();

    }

    void registerCallBackObject() {
        try {
            callBack = new CallBack(this);
            CallBackStub stub = (CallBackStub) UnicastRemoteObject.exportObject(callBack, 0);
            boolean ret = commModule.getServantStub().registerCallBack(userID, stub);
            if (ret) {
                System.out.println("Callback registration successfull");
            }
        } catch (RemoteException ex) {
            System.out.println("Callback registration failed, check your network");
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    void showRequests(ArrayList<UserProfileStub> userProfiles) {
        JFrame f = new JFrame(userID + " - Friend Requests");
        if (userProfiles.size() > 0) {
            FriendRequestPanel friendRequestPanel = new FriendRequestPanel(f, this, commModule, userProfiles);
            f.add(friendRequestPanel);
            f.setResizable(false);
            f.pack();
            f.setVisible(true);
        }
    }

    void showPosts(ArrayList<Post> posts) {
        homePanel.addPosts(posts, true);
    }

    void showMessage(String friendID, String text) {
        friendsPanel.showMessage(friendID, text);
    }

    void updateFriendList() {
        friendsPanel.updateFriendList();
    }
}
